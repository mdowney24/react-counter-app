{"ast":null,"code":"var _jsxFileName = \"/Users/michaeldowney/react-counter-app/src/components/counter.jsx\";\nimport React, { Component } from \"react\";\n\nclass Counter extends Component {\n  // LIFECYCLE HOOK: Update Phase\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevProps\", prevProps);\n    console.log(\"prevState\", prevState);\n\n    if (prevProps.counter.value !== this.props.counter.value) {// ajax call and get new data from the server\n    }\n  } // LIFECYCLE HOOK: Unmount Phase\n\n\n  componentWillUnmount() {\n    console.log(\"Counter - Unmount\");\n  } // this is the render method\n\n\n  render() {\n    console.log(\"Counter - Rendered\"); // div is the parent, with two chilren, span and button\n\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }, React.createElement(\"span\", {\n      className: this.getBadgeClasses(),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, this.formatCount()), React.createElement(\"button\", {\n      onClick: () => this.props.onIncrement(this.props.counter),\n      className: \"btn m-1 btn-secondary btn-sm\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, \"+\"), React.createElement(\"button\", {\n      onClick: () => this.props.onDelete(this.props.counter.id),\n      className: \"btn btn-danger btn-sm m-2\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, \"Delete\"));\n  }\n\n  getBadgeClasses() {\n    let classes = \"btn bagde m-1 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const value = this.props.counter.value;\n    return value === 0 ? \"0\" : value;\n  }\n\n}\n\nexport default Counter;","map":{"version":3,"sources":["/Users/michaeldowney/react-counter-app/src/components/counter.jsx"],"names":["React","Component","Counter","componentDidUpdate","prevProps","prevState","console","log","counter","value","props","componentWillUnmount","render","getBadgeClasses","formatCount","onIncrement","onDelete","id","classes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;AAEA,MAAMC,OAAN,SAAsBD,SAAtB,CAAgC;AAC9B;AACAE,EAAAA,kBAAkB,CAACC,SAAD,EAAYC,SAAZ,EAAuB;AACvCC,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBH,SAAzB;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,SAAzB;;AAEA,QAAID,SAAS,CAACI,OAAV,CAAkBC,KAAlB,KAA4B,KAAKC,KAAL,CAAWF,OAAX,CAAmBC,KAAnD,EAA0D,CACxD;AACD;AACF,GAT6B,CAW9B;;;AACAE,EAAAA,oBAAoB,GAAG;AACrBL,IAAAA,OAAO,CAACC,GAAR,CAAY,mBAAZ;AACD,GAd6B,CAgB9B;;;AACAK,EAAAA,MAAM,GAAG;AACPN,IAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EADO,CAGP;;AACA,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,SAAS,EAAE,KAAKM,eAAL,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0C,KAAKC,WAAL,EAA1C,CADF,EAEE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKJ,KAAL,CAAWK,WAAX,CAAuB,KAAKL,KAAL,CAAWF,OAAlC,CADjB;AAEE,MAAA,SAAS,EAAC,8BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAFF,EAQE;AACE,MAAA,OAAO,EAAE,MAAM,KAAKE,KAAL,CAAWM,QAAX,CAAoB,KAAKN,KAAL,CAAWF,OAAX,CAAmBS,EAAvC,CADjB;AAEE,MAAA,SAAS,EAAC,2BAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBARF,CADF;AAiBD;;AAEDJ,EAAAA,eAAe,GAAG;AAChB,QAAIK,OAAO,GAAG,sBAAd;AACAA,IAAAA,OAAO,IAAI,KAAKR,KAAL,CAAWF,OAAX,CAAmBC,KAAnB,KAA6B,CAA7B,GAAiC,SAAjC,GAA6C,SAAxD;AACA,WAAOS,OAAP;AACD;;AAEDJ,EAAAA,WAAW,GAAG;AAAA,UACJL,KADI,GACM,KAAKC,KAAL,CAAWF,OADjB,CACJC,KADI;AAEZ,WAAOA,KAAK,KAAK,CAAV,GAAc,GAAd,GAAoBA,KAA3B;AACD;;AAjD6B;;AAoDhC,eAAeP,OAAf","sourcesContent":["import React, { Component } from \"react\";\n\nclass Counter extends Component {\n  // LIFECYCLE HOOK: Update Phase\n  componentDidUpdate(prevProps, prevState) {\n    console.log(\"prevProps\", prevProps);\n    console.log(\"prevState\", prevState);\n\n    if (prevProps.counter.value !== this.props.counter.value) {\n      // ajax call and get new data from the server\n    }\n  }\n\n  // LIFECYCLE HOOK: Unmount Phase\n  componentWillUnmount() {\n    console.log(\"Counter - Unmount\");\n  }\n\n  // this is the render method\n  render() {\n    console.log(\"Counter - Rendered\");\n\n    // div is the parent, with two chilren, span and button\n    return (\n      <div>\n        <span className={this.getBadgeClasses()}>{this.formatCount()}</span>\n        <button\n          onClick={() => this.props.onIncrement(this.props.counter)}\n          className=\"btn m-1 btn-secondary btn-sm\"\n        >\n          +\n        </button>\n        <button\n          onClick={() => this.props.onDelete(this.props.counter.id)}\n          className=\"btn btn-danger btn-sm m-2\"\n        >\n          Delete\n        </button>\n      </div>\n    );\n  }\n\n  getBadgeClasses() {\n    let classes = \"btn bagde m-1 badge-\";\n    classes += this.props.counter.value === 0 ? \"warning\" : \"primary\";\n    return classes;\n  }\n\n  formatCount() {\n    const { value } = this.props.counter;\n    return value === 0 ? \"0\" : value;\n  }\n}\n\nexport default Counter;\n"]},"metadata":{},"sourceType":"module"}